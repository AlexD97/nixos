;; for notifications
(deflisten control-center-cards "Control-Center/scripts/logger.zsh subscribe")
(defpoll control-center-critical :interval "1s" "Control-Center/scripts/logger.zsh crits")

;; for controls and tray
;(defvar net-toggle "Control-Center/scripts/net.sh --toggle" )
;(defpoll net-status :interval "1s" "Control-Center/scripts/net.sh --status")
;(defvar volume-toggle "Control-Center/scripts/vol.sh --toggle")
;(defpoll volume-status :interval "1s" "Control-Center/scripts/vol.sh --status")
;(defvar bluetooth-toggle "Control-Center/scripts/bluetooth.sh --toggle")
;(defpoll bluetooth-status :interval "1s" "Control-Center/scripts/bluetooth.sh --status")
;(defpoll bluetooth-icon :interval "1s" "Control-Center/scripts/bluetooth.sh --icon")
(defvar dunst-toggle "Control-Center/scripts/dunst.sh --toggle")
(defpoll dunst-status :interval "1s" "Control-Center/scripts/dunst.sh --status")
;(defpoll redshift :interval "1s" "[ $(pidof redshift) ] && echo '󰛨' || echo '󰹏'")

;; for sliders
;(defpoll volume :interval "1s" "~/.config/eww/Control-Center/scripts/getvol.sh")
;(defpoll volume-slider-indicator :interval "0s" "~/.config/eww/Control-Center/scripts/volume-slider.sh")
;(defpoll mic :interval "1s" "~/.config/eww/Control-Center/scripts/getmic.sh")
;(defpoll mic-slider-indicator :interval "0s" "~/.config/eww/Control-Center/scripts/mic-slider.sh")
;(defpoll brightness :interval "1s" "~/.config/eww/Control-Center/scripts/brightness-slider.sh --value")
;(defpoll brightness-slider-indicator :interval "0s" "~/.config/eww/Control-Center/scripts/brightness-slider.sh --icon")

(defwidget control-center[]
  (box :orientation "vertical"
    :space-evenly false
    (box :space-evenly false
      :class "control-center-headers"
      :hexpand true
      
      (label :text "Notifications"
        :class "control-center-headers-label"
        :halign "start"
      :hexpand true)
      (button :onclick "Control-Center/scripts/logger.zsh clear"
        :class "control-center-headers-clear"
        :halign "end"
      "󰎟"))
    
    (literal :content control-center-cards)))

(defwidget card [?class summary body glyph ?glyph_class ?SL ?M ?L ?R]
  (eventbox :onmiddleclick M
    :onclick L
    :onrightclick R
    :class "control-center-card-eventbox"
    (box :space-evenly false
      (label :class "control-center-glyph ${glyph_class}"
      :text glyph)
      
      (box :orientation "vertical"
        :class class
        :space-evenly false
        :class "control-center-card-box"
        
        (box :space-evenly false
          (label :limit-width 25
            :wrap true
            :text summary
            :class "control-center-summary"
            :halign "start"
          :hexpand true)
          (button :onclick "Control-Center/scripts/logger.zsh rm_id ${SL}"
            :class "control-center-card-notify-close"
            :halign "end"
            (label :text "󰅙")))
        
        (label :text "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          :class "control-center-separator"
        :halign "center")
        (label :limit-width 40
          :halign "start"
          :wrap true
          :text body
        :class "control-center-body")))))

(defwidget tray []
  (box :class "control-center-tray" :height 280
    (box :orientation "v" :space-evenly "false")))

(defwindow control-center :stacking "fg"
  :windowtype "normal"
  :wm-ignore true
  :monitor 0
  :geometry (geometry :width "25%" :height "75%" :y "1%" :x "75%")
  (control-center))
